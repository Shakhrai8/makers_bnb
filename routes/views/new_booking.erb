<!DOCTYPE html>
<html>
<head>
  <title>New Booking</title>
  <link rel="stylesheet" type="text/css" href="/new_booking_style.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.4/dist/sweetalert2.min.js"></script>
</head>
<body>
  <div class="container">
    <a href="/profile" class="profile-button">Back to Profile</a>
    <div class="header">
      <h1 class="heading">New Booking</h1>
    </div>
    <% if logged_in? %>
      <div class="content">
        <form class="new-booking-form" action="/space/<%= params[:space_id] %>/new_booking" method="post">
          <div class="form-group">
            <label for="start_date">Start Date:</label>
            <input type="date" name="start_date" id="start_date" required>
          </div>

          <div class="form-group">
            <label for="end_date">End Date:</label>
            <input type="date" name="end_date" id="end_date" required>
          </div>

          <div class="form-group">
            <label for="contents">Contents:</label>
            <input type="text" name="contents" id="contents" required>
          </div>

          <div class="form-group">
            <input type="submit" value="Book">
          </div>
        </form>
      </div>
    <% else %>
      <p>You must be logged in to make a booking. Please <a href="/login">log in</a>.</p>
    <% end %>
    <a href="/feed" class="back-button">Cancel</a>
  </div>

  <script>
    const bookedDates = <%= @availability_dates.to_json %>;
    const startDateInput = document.getElementById('start_date');
    const endDateInput = document.getElementById('end_date');
    const error = '<%= params[:error] %>';
  
    startDateInput.addEventListener('change', updateEndDateOptions);
    endDateInput.addEventListener('change', updateStartDateOptions);
  
    function updateEndDateOptions() {
      const selectedStartDate = new Date(startDateInput.value);
      const availableEndDates = getAvailableEndDates(selectedStartDate);
      updateDateOptions(endDateInput, availableEndDates);
    }
  
    function updateStartDateOptions() {
      const selectedEndDate = new Date(endDateInput.value);
      const availableStartDates = getAvailableStartDates(selectedEndDate);
      updateDateOptions(startDateInput, availableStartDates);
    }
  
    function getAvailableEndDates(startDate) {
      return bookedDates.filter(date => new Date(date) >= startDate);
    }
  
    function getAvailableStartDates(endDate) {
      return bookedDates.filter(date => new Date(date) <= endDate);
    }
  
    function updateDateOptions(dateInput, availableDates) {
      const selectedDate = new Date(dateInput.value);
      dateInput.innerHTML = '';
  
      availableDates.forEach(date => {
        const option = document.createElement('option');
        option.value = date;
        option.text = date;
        dateInput.appendChild(option);
      });
  
      dateInput.value = selectedDate.toISOString().split('T')[0];
    }
  
    if (error === 'dates_unavailable') {
      Swal.fire({
        icon: 'error',
        title: 'Dates Unavailable',
        text: 'The selected dates are not available. Please choose different dates.',
        confirmButtonText: 'OK'
      });
    }
  
    updateEndDateOptions();
  </script>
</body>
</html>

